#+BIND: org-export-publishing-directory "output"
#+OPTIONS: toc:nil
#+TITLE: Interpretador de código morse para microcontroladores da família 8051
#+AUTHOR: Guilherme Ormond Sampaio & Leon Ferreira Bellini

* Introdução
  Projetado como codificação para o envio de mensagens por pulso a grandes 
distâncias, o Código Morse mostrou-se de extrema importância exatamente por essa
codificação, permitindo-o ser além de universal, facilmente compreendido. Dispositivos 
para envio e interpretação de seus caracteres são facilmente produzidos. 

#+CAPTION: Lista de caracteres do Código Morse (SNODGRASS & CAMP)
#+NAME: fig:MORSE
[[./img/codigo_morsa.png]]
* Objetivos
  O objetivo geral do projeto é desenvolver um interpretador de código morse, ou
seja, um "conversor" de morse para caracteres do alfabeto latino. O projeto será 
exclusivo para microcontroladores da família 8051 e, por ter sua programação feita 
totalmente em /assembly/ para tal família, a portabilidade do mesmo é mínima.

Todas as simulações serão realizadas na IDE /edSim/, é recomendada a frequência
de atualização de 10KHz por motivos os quais serão detalhados.

** O interpretador 
   Em primeira instância, o código para a distinção entre pontos e traços, os 
quais são as principais características da codificação do sistema será baseado
no quanto de tempo o usuário pressionou o botão ligado ao pino *P3.2* 
no teclado do simulador. O tempo em questão é de 16 milissegundos, tal métrica 
fora obtida do tempo padrão para ativar-se um botão em um jogo que trabalhe com 
60 /frames/ por segundo. Por se tratar de uma simulação, o tempo calculado para uma
situação real apenas serve como uma forma de determinar o padrão, este sendo
mais funcional quando o simulador está configurado para atualizar em 10MHz.
 O usuário *deve* apertar um outro botão para que o 
programa entenda que seu caractere já foi digitado, permitindo o microcontrolador 
a interpretar a sequência recebida.

#+CAPTION: Parte pronta do código a qual  determina se há uma linha ou clique
#+NAME: fig:codigo_bot
#+BEGIN_SRC asm
  org 30h
  CONTINHAS:
	  ;; gravar o tempo que ficou apertado
	  CLR C
	  CLR OV	
	  MOV A, TL0
	  SUBB A, R3 ;; inutil talvez?
	  ;; A - R3 ainda produziria carry
	  MOV A, TH0
	  SUBB A, R2 ;; se setar ACC, é menor?
	  JC MENOR
	  CLR P1.0 ;; teste aqui é uma linha
  VOLTA:	
	  NOP
	  LJMP FINAL

  org 65h
  MENOR:
	  CLR p1.1 ;; aqui um clique
	  LJMP VOLTA
	
  org 50h
  TEMP: 
	  CPL TR0
	  RET

  org 80h
  MAIN_LOOP:
	  MOV TMOD, #00001001h 
	  ;; interesse está no tempo apertado
	  MOV TH0, #0
	  MOV TL0, #0
	  ;; 16MS é 3e80 (16bits) 
	  MOV R2, #0X3E 
	  MOV R3, #0X80
	  SETB EA
	  SETB IT0
  CONTROLE:
	  JB BOTAO, $
	  LCALL TEMP
	  JNB BOTAO, $
	  LCALL TEMP
	  LJMP CONTINHAS 
  FINAL:
	  LCALL ZERAR
	  SJMP CONTROLE

#+END_SRC

No momento questões de otimização de ROM tomada e ciclos de processamento
estão em segundo plano.

** O "banco de dados"
   Todos os caracteres podem ser dispostos num grafo do tipo árvore. Dependendo 
da "pontuação" de cada caractere digitado, o ponteiro DPTR pode ser movimentado 
de acordo por entre os endereços onde os códigos dos carácteres podem ser encontrados
na memória. Estes códigos de início representarão letras e números compatíveis com 
o /display/ LCD /Hitachi/ 44780.

#+CAPTION: Árvore de caracteres do código morse
#+NAME: fig:MORSE_TREE
[[./img/arvre.png]]

   Os números grafados em vermelho representam a posição que ocuparão na memória, partindo 
da posição 40 e seguinto até a posição 102. Caso seja necessária alguma alteração em 
suas posições, basta alterar o endereço inicial pelo comando /org/.

** O /output/
   Como dito anteriormente, inicialmente os carácteres serão dispostos no 
/display/ 44780, o qual possuí módulo na IDE /edsim/, quaisquer carácteres inválidos
serão substituídos por um /blankspace/ (ausência de caracter).
 Se o mesmo /display/ provar-se
muito trabalhoso de se compreender, a transmissão via serial é uma alternativa, 
uma vez que o tempo para entrega do projeto é curta.

#+CAPTION: Módulo do edsim para LCD
#+NAME: fig:LCD
[[./img/lcd.png]]

#+CAPTION: Tabela de posições, caracteres e representação dos caracteres no LCD.
| memória | letra | representação | conteúdo (hex) |
|---------+-------+---------------+----------------|
|       0 | E     | .             |             45 |
|       1 | I     | . .           |             49 |
|       2 | S     | . . .         |             53 |
|       3 | H     | . . . .       |             48 |
|       4 | 5     | . . . . .     |             35 |
|       5 | 4     | . . . . -     |             34 |
|       6 | V     | . . . -       |             56 |
|       7 |       | . . . - .     |             20 |
|       8 | 3     | . . . - -     |             33 |
|       9 | U     | . . -         |             55 |
|      10 | F     | . . - .       |             46 |
|      11 |       | . . - . .     |             20 |
|      12 |       | . . - . -     |             20 |
|      13 |       | . . - -       |             20 |
|      14 |       | . . - - .     |             20 |
|      15 | 2     | . . - - -     |             32 |
|      16 | A     | . -           |             41 |
|      17 | R     | . - .         |             52 |
|      18 | L     | . - . .       |             4C |
|      19 |       | . - . . .     |             20 |
|      20 |       | . - . . -     |             20 |
|      21 |       | . - . -       |             20 |
|      22 | +     | . - . - .     |             2B |
|      23 |       | . - . - -     |             20 |
|      24 | W     | . - -         |             57 |
|      25 | P     | . - - .       |             50 |
|      26 |       | . - - . .     |             20 |
|      27 |       | . - - . -     |             20 |
|      28 | J     | . - - -       |             4A |
|      29 |       | . - - - .     |             20 |
|      30 | 1     | . - - - -     |             31 |
|      31 | START | 0             |             20 |
|      32 | 0     | - - - - -     |             30 |
|      33 | 9     | - - - - .     |             39 |
|      34 |       | - - - -       |             20 |
|      35 |       | - - - . -     |             20 |

| memória | letra | representação | conteúdo (hex) |
|---------+-------+---------------+----------------|
|      36 | 8     | - - - . .     |             38 |
|      37 |       | - - - .       |             20 |
|      38 | O     | - - -         |             4F |
|      39 |       | - - . - -     |             20 |
|      40 |       | - - . - .     |             20 |
|      41 | Q     | - - . -       |             51 |
|      42 |       | - - . . -     |             20 |
|      43 | 7     | - - . . .     |             37 |
|      44 | Z     | - - . .       |             5A |
|      45 | G     | - - .         |             47 |
|      46 | M     | - -           |             4D |
|      47 |       | - . - - -     |             20 |
|      48 |       | - . - - .     |             20 |
|      49 | Y     | - . - -       |             59 |
|      50 |       | - . - . -     |             20 |
|      51 |       | - . - . .     |             BC |
|      52 | C     | - . - .       |             43 |
|      53 | K     | - . -         |             4B |
|      54 |       | - . . - -     |             20 |
|      55 | /     | - . . - .     |             2F |
|      56 | X     | - . . -       |             58 |
|      57 | =     | - . . . -     |             3D |
|      58 | 6     | - . . . .     |             36 |
|      59 | B     | - . . .       |             42 |
|      60 | D     | - . .         |             44 |
|      61 | N     | - .           |             4E |
|      62 | T     | -             |             54 |
